name: Build and Verify Plugin

on:
    push:
        branches: '*'
        tags-ignore: '*'
    pull_request:
        branches: '*'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build:
        name: Build and Verify Plugin
        runs-on: ubuntu-latest
        timeout-minutes: 10
        steps:
            -   name: Checkout
                uses: actions/checkout@v4.2.2
            -   name: Setup Java
                uses: actions/setup-java@v4.7.1
                with:
                    java-version: 21.x
                    distribution: temurin
            -   name: Setup Gradle
                uses: gradle/actions/setup-gradle@v4
            -   name: Build
                env:
                    CI: true
                run: |
                    ./gradlew --no-daemon :move-tab-plugin:verifyPlugin
            -   name: Predict Next Version
                id: semrel
                shell: bash
                run: |
                    curl -L -o semrel https://registry.go-semantic-release.xyz/downloads/linux/amd64/semantic-release
                    chmod +x semrel
                    ./semrel --version-file --changelog .generated-go-semantic-release-changelog.md --token ${{ secrets.GITHUB_TOKEN }} --dry --allow-no-changes --no-ci 2>&1 | tee semrel.log
                    if [ -f .version-unreleased ]; then
                        version=$(cat .version-unreleased)
                        rm .version-unreleased
                    else
                        version=""
                    fi
                    previous=$(grep -m1 -oE 'found version: [^ ]+' semrel.log | awk '{print $3}')
                    echo "version=$version" >> "$GITHUB_OUTPUT"
                    echo "previous=$previous" >> "$GITHUB_OUTPUT"
            -   name: Show Predicted Version
                run: |
                    echo "### Predicted Release Version" >> "$GITHUB_STEP_SUMMARY"
                    echo "" >> "$GITHUB_STEP_SUMMARY"
                    version="${{ steps.semrel.outputs.version }}"
                    if [ -z "$version" ]; then
                        version="${{ steps.semrel.outputs.previous }} (insufficient changes for new version)"
                    fi
                    echo "Next release version if created from this commit: **$version**" >> "$GITHUB_STEP_SUMMARY"
